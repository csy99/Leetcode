/**
 * Created by csy99 on 8/22/21.
 * https://www.geeksforgeeks.org/check-if-array-can-be-sorted-with-one-swap/
 */
class Solution {
    static boolean checkSorted(int n, int arr[]) {
        // Find counts and positions of
        // elements that are out of order.
        int first = 0, second = 0;
        int count = 0;
        for (int i = 1; i < n; i++) {
            if (arr[i] < arr[i - 1]) {
                count++;
                if (first == 0)
                    first = i;
                else
                    second = i;
            }
        }

        // If there are more than two elements
        // are out of order.
        if (count > 2)
            return false;

        // If all elements are sorted already
        if (count == 0)
            return true;

        // Cases like {1, 5, 3, 4, 2}
        // We swap 5 and 2.
        if (count == 2)
            swap(arr, first - 1, second);

        // Cases like {1, 2, 4, 3, 5}
        else if (count == 1)
            swap(arr, first - 1, first);

        // Now check if array becomes sorted
        // for cases like {4, 1, 2, 3}
        for (int i = 1; i < n; i++)
            if (arr[i] < arr[i - 1])
                return false;

        return true;
    }

    static int[] swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
        return arr;
    }
}
